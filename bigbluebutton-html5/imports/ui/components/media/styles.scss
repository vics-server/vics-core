@import "../../stylesheets/variables/_all";
@import "../../stylesheets/variables/video";
@import "../video-provider/video-list/styles";

$content-order: 2;
$before-content-order: 1;
$after-content-order: 3;

.cursorGrab {
  cursor: grab;
}

.cursorGrabbing {
  cursor: grabbing;
}

%container {
  order: 1;
  flex: 2;
  display: flex;
  align-items: center;
  justify-content: center;
}

.container {
  overflow: hidden;
}

.containerV {
  @extend %container;
  flex-direction: column;
}

.containerH {
  @extend %container;
  flex-direction: row;
}

.content {
  display: flex;
  align-self: stretch;
  flex: 3;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  width: 100%;
  position: relative;
  order: $content-order;
}

%overlay {
  display: flex;
  border: 0;
  z-index: 2;
  align-items: center;
  min-height: var(--video-height);
  max-height: 100%;
  height: 100%;
  position: relative !important;
  margin-top: 10px;
  margin-bottom: 10px;
}

.overlay {
  @extend %overlay;
}

.overlayToTop {
  order: $before-content-order !important;
}

.overlayToBottom {
  order: $after-content-order !important;
}

%overlayToRL {
  min-width: 20%;
  margin-left: 10px !important;
  margin-right: 10px !important;
}

.overlayToRight {
  @extend %overlayToRL;
  order: 2 !important;
}

.overlayToLeft {
  @extend %overlayToRL;
  order: 0 !important;
}

.overlayToBottom {
  order: 2 !important;
}

// used to fully hide the presentation area when minimized
.hideOverlay {
  visibility: hidden !important;
  position: absolute !important;
  overflow: hidden !important;
  clip: rect(0 0 0 0) !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  padding: 0 !important;
  border: 0 !important;
}

.floatingOverlay {
  @extend %overlay;
  top: 0;
  left: 0;

  z-index: 2;
  position: absolute !important;
  min-width: calc(var(--video-height) * var(--video-ratio)) !important;
  min-height: var(--video-height) !important;
}

.autoWidth {
  min-width: calc(var(--video-height) * var(--video-ratio)) !important;
  max-width: 100%;

  .videoCanvas{
    position: relative;
  }
}

.fullWidth {
  width: 100% !important;
  min-width: 100% !important;
  max-width: 100%;
}

.fullHeight {
  height: 100% !important;
  min-height: 100% !important;
  max-height: 100%;
}

.hide {
  display: none;
}

.show {
  display: block;
}

.dragging {
  opacity: .5 !important;
}

%dropZone {
  border: 1px dashed var(--color-gray-light);
  position: absolute;
  z-index: 9999;
}

%dropZoneTopBottom {
  @extend %dropZone;
  width: 100%;
}

%dropZoneBg {
  z-index: 99;
  width: 100%;
  height: 100%;
  &:hover {
    background-color: rgba(255, 255, 255, .3);
  }
}

%dropZoneBgTopBottom {
  z-index: 99;
  width: 100%;
  height: 100%;
}

.dropZoneTop {
  @extend %dropZoneTopBottom;
  top: 0;
}

.dropZoneLeft {
  @extend %dropZone;
  left: 0;
}

.dropZoneBottom {
  @extend %dropZoneTopBottom;
  bottom: 0;
}

.dropZoneRight {
  @extend %dropZone;
  right: 0;
}

.dropZoneBgTop {
  @extend %dropZoneBg;
  top: 0;
}

.dropZoneBgLeft {
  @extend %dropZoneBg;
  left: 0;
}

.dropZoneBgBottom {
  @extend %dropZoneBg;
  bottom: 0;
}

.dropZoneBgRight {
  @extend %dropZoneBg;
  right: 0;
}

%resizableTopBottom {
  width: 100% !important;
  &:hover{
    background-color: rgba(255, 255, 255, .3);
  }
}

%resizableLeftRight {
  height: 100% !important;
  &:hover{
    background-color: rgba(255, 255, 255, .3);
  }
}

.overlayToTop span[class^=resizeWrapper],
.overlayToBottom span[class^=resizeWrapper] {
  div {
    @extend %resizableTopBottom;
    height: 15px !important;
    z-index: 1;
    bottom: -10px !important;
  }
}

.overlayToLeft span[class^=resizeWrapper],
.overlayToRight span[class^=resizeWrapper] {
  div {
    @extend %resizableLeftRight;
    width: 15px !important;
    z-index: 1;
    bottom: -10px !important;
  }
}